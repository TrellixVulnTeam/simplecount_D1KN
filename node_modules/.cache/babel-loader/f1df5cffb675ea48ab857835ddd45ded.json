{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nconst useTimer = () => {\n  _s();\n\n  const timerRef = useRef(0);\n  const intervalRef = useRef();\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n  const updateTimeValues = useCallback(difference => {\n    var d = Math.floor(difference / (1000 * 60 * 60 * 24));\n    var h = Math.floor(difference / (1000 * 60 * 60) % 24);\n    var m = Math.floor(difference / 1000 / 60 % 60);\n    var s = Math.floor(difference / 1000 % 60);\n    setDay(d);\n    setHour(h);\n    setMinute(m);\n    setSecond(s);\n  }, []);\n  const calculateEndTime = useCallback(() => {\n    let difference = +new Date(`04/25/2022`) - +new Date();\n    timerRef.current = difference;\n  }, []);\n  const run = useCallback(() => {\n    decreaseNum();\n    intervalRef.current = setInterval(decreaseNum, 1000); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const decreaseNum = useCallback(() => {\n    console.log('test');\n\n    if (timerRef.current >= 0) {\n      updateTimeValues(timerRef.current);\n      timerRef.current = timerRef.current - 1;\n    } else {\n      clearInterval(intervalRef.current);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    calculateEndTime();\n    run();\n    return () => clearInterval(intervalRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    day,\n    hour,\n    minute,\n    second\n  };\n};\n\n_s(useTimer, \"D8ACAf6DLgamN7OYDJzJgqzHIxo=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/Users/lindsayj/Documents/dev/simplecountdown/src/hooks/useTimer.ts"],"names":["useRef","useState","useEffect","useCallback","useTimer","timerRef","intervalRef","day","setDay","hour","setHour","minute","setMinute","second","setSecond","updateTimeValues","difference","d","Math","floor","h","m","s","calculateEndTime","Date","current","run","decreaseNum","setInterval","console","log","clearInterval"],"mappings":";;AAAA,SACEA,MADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,OALP;;AAeA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGL,MAAM,CAAC,CAAD,CAAvB;AACA,QAAMM,WAAW,GAAGN,MAAM,EAA1B;AAEA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMc,gBAAgB,GAAGZ,WAAW,CAAEa,UAAD,IAAwB;AAC3D,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CAAR;AACA,QAAII,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAAR;AACA,QAAIK,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAAR;AACA,QAAIM,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAd,GAAsB,EAAjC,CAAR;AAEAR,IAAAA,MAAM,CAACS,CAAD,CAAN;AACAP,IAAAA,OAAO,CAACU,CAAD,CAAP;AACAR,IAAAA,SAAS,CAACS,CAAD,CAAT;AACAP,IAAAA,SAAS,CAACQ,CAAD,CAAT;AACD,GAVmC,EAUjC,EAViC,CAApC;AAYA,QAAMC,gBAAgB,GAAGpB,WAAW,CAAC,MAAM;AACzC,QAAIa,UAAU,GAAG,CAAC,IAAIQ,IAAJ,CAAU,YAAV,CAAD,GAA0B,CAAC,IAAIA,IAAJ,EAA5C;AAEAnB,IAAAA,QAAQ,CAACoB,OAAT,GAAmBT,UAAnB;AAED,GALmC,EAKjC,EALiC,CAApC;AAOA,QAAMU,GAAG,GAAGvB,WAAW,CAAC,MAAM;AAC5BwB,IAAAA,WAAW;AACXrB,IAAAA,WAAW,CAACmB,OAAZ,GAAsBG,WAAW,CAACD,WAAD,EAAc,IAAd,CAAjC,CAF4B,CAG5B;AACD,GAJsB,EAIpB,EAJoB,CAAvB;AAMA,QAAMA,WAAW,GAAGxB,WAAW,CAAC,MAAM;AACpC0B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIzB,QAAQ,CAACoB,OAAT,IAAoB,CAAxB,EAA2B;AACzBV,MAAAA,gBAAgB,CAACV,QAAQ,CAACoB,OAAV,CAAhB;AACApB,MAAAA,QAAQ,CAACoB,OAAT,GAAmBpB,QAAQ,CAACoB,OAAT,GAAmB,CAAtC;AACD,KAHD,MAGO;AACLM,MAAAA,aAAa,CAACzB,WAAW,CAACmB,OAAb,CAAb;AACD,KAPmC,CAQpC;;AACD,GAT8B,EAS5B,EAT4B,CAA/B;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,gBAAgB;AAChBG,IAAAA,GAAG;AACH,WAAO,MAAMK,aAAa,CAACzB,WAAW,CAACmB,OAAb,CAA1B,CAHc,CAId;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO;AACLlB,IAAAA,GADK;AAELE,IAAAA,IAFK;AAGLE,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CA1DD;;GAAMT,Q;;AA4DN,eAAeA,QAAf","sourcesContent":["import {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\n\nimport {\n  setDate,\n  setHours,\n  setMinutes,\n  setSeconds,\n  differenceInSeconds,\n} from 'date-fns';\n\nconst useTimer = () => {\n  const timerRef = useRef(0);\n  const intervalRef = useRef<any>();\n\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n\n  const updateTimeValues = useCallback((difference: number) => {\n    var d = Math.floor(difference / (1000 * 60 * 60 * 24));\n    var h = Math.floor((difference / (1000 * 60 * 60)) % 24);\n    var m = Math.floor((difference / 1000 / 60) % 60);\n    var s = Math.floor((difference / 1000) % 60);\n\n    setDay(d);\n    setHour(h);\n    setMinute(m);\n    setSecond(s);\n  }, []);\n\n  const calculateEndTime = useCallback(() => {\n    let difference = +new Date(`04/25/2022`) - +new Date();\n\n    timerRef.current = difference;\n  \n  }, []);\n\n  const run = useCallback(() => {\n    decreaseNum();\n    intervalRef.current = setInterval(decreaseNum, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const decreaseNum = useCallback(() => {\n    console.log('test')\n    if (timerRef.current >= 0) {\n      updateTimeValues(timerRef.current);\n      timerRef.current = timerRef.current - 1;\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    calculateEndTime();\n    run();\n    return () => clearInterval(intervalRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    day,\n    hour,\n    minute,\n    second,\n  };\n};\n\nexport default useTimer;\n"]},"metadata":{},"sourceType":"module"}