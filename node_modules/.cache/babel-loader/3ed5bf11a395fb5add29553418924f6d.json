{"ast":null,"code":"import _slicedToArray from\"/Users/lindsayj/Documents/dev/simplecountdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState,useEffect,useCallback}from'react';import{setDate,setHours,setMinutes,setSeconds,differenceInSeconds}from'date-fns';var useTimer=function useTimer(){var timerRef=useRef(0);var intervalRef=useRef();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),day=_useState2[0],setDay=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),hour=_useState4[0],setHour=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),minute=_useState6[0],setMinute=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),second=_useState8[0],setSecond=_useState8[1];var updateTimeValues=useCallback(function(total){var d=Math.floor(total/(3600*24));var h=Math.floor(total%(3600*24)/3600);var m=Math.floor(total%3600/60);var s=Math.floor(total%60);setDay(d);setHour(h);setMinute(m);setSecond(s);},[]);var calculateEndTime=useCallback(function(){var date=new Date();var baseDate=new Date();baseDate=setDate(date,0);baseDate=setHours(baseDate,0);baseDate=setMinutes(baseDate,0);baseDate=setSeconds(baseDate,0);timerRef.current=differenceInSeconds(date,baseDate);},[]);var run=useCallback(function(){decreaseNum();intervalRef.current=setInterval(decreaseNum,1000);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var decreaseNum=useCallback(function(){if(timerRef.current>=0){updateTimeValues(timerRef.current);timerRef.current=timerRef.current-1;}else{clearInterval(intervalRef.current);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(function(){calculateEndTime();run();return function(){return clearInterval(intervalRef.current);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return{day:day,hour:hour,minute:minute,second:second};};export default useTimer;","map":{"version":3,"sources":["/Users/lindsayj/Documents/dev/simplecountdown/src/hooks/useTimer.ts"],"names":["useRef","useState","useEffect","useCallback","setDate","setHours","setMinutes","setSeconds","differenceInSeconds","useTimer","timerRef","intervalRef","day","setDay","hour","setHour","minute","setMinute","second","setSecond","updateTimeValues","total","d","Math","floor","h","m","s","calculateEndTime","date","Date","baseDate","current","run","decreaseNum","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\n\nimport {\n  setDate,\n  setHours,\n  setMinutes,\n  setSeconds,\n  differenceInSeconds,\n} from 'date-fns';\n\nconst useTimer = () => {\n  const timerRef = useRef(0);\n  const intervalRef = useRef<any>();\n\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n\n  const updateTimeValues = useCallback((total: number) => {\n    var d = Math.floor(total / (3600*24));\n    var h = Math.floor(total % (3600*24) / 3600);\n    var m = Math.floor(total % 3600 / 60);\n    var s = Math.floor(total % 60);\n\n    setDay(d);\n    setHour(h);\n    setMinute(m);\n    setSecond(s);\n  }, []);\n\n  const calculateEndTime = useCallback(() => {\n    const date = new Date();\n    let baseDate = new Date();\n    baseDate = setDate(date, 0);\n    baseDate = setHours(baseDate, 0);\n    baseDate = setMinutes(baseDate, 0);\n    baseDate = setSeconds(baseDate, 0);\n    timerRef.current = differenceInSeconds(date, baseDate);\n  }, []);\n\n  const run = useCallback(() => {\n    decreaseNum();\n    intervalRef.current = setInterval(decreaseNum, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const decreaseNum = useCallback(() => {\n    if (timerRef.current >= 0) {\n      updateTimeValues(timerRef.current);\n      timerRef.current = timerRef.current - 1;\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    calculateEndTime();\n    run();\n    return () => clearInterval(intervalRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    day,\n    hour,\n    minute,\n    second,\n  };\n};\n\nexport default useTimer;\n"]},"metadata":{},"sourceType":"module"}