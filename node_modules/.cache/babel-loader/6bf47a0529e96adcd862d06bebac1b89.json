{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { differenceInSeconds } from 'date-fns';\n\nconst useTimer = () => {\n  _s();\n\n  const timerRef = useRef(0);\n  const intervalRef = useRef();\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n  const updateTimeValues = useCallback(total => {\n    var d = Math.floor(total / (3600 * 24));\n    var h = Math.floor(total % (3600 * 24) / 3600);\n    var m = Math.floor(total % 3600 / 60);\n    var s = Math.floor(total % 60);\n    setDay(d);\n    setHour(h);\n    setMinute(m);\n    setSecond(s);\n  }, []);\n  const calculateEndTime = useCallback(() => {\n    const date = new Date();\n    let baseDate = new Date('April 25, 2022 00:00:00');\n    timerRef.current = differenceInSeconds(date, baseDate);\n  }, []);\n  const run = useCallback(() => {\n    decreaseNum();\n    intervalRef.current = setInterval(decreaseNum, 1000); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const decreaseNum = useCallback(() => {\n    if (timerRef.current >= 0) {\n      updateTimeValues(timerRef.current);\n      timerRef.current = timerRef.current - 1;\n    } else {\n      clearInterval(intervalRef.current);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    calculateEndTime();\n    run();\n    return () => clearInterval(intervalRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    day,\n    hour,\n    minute,\n    second\n  };\n};\n\n_s(useTimer, \"D8ACAf6DLgamN7OYDJzJgqzHIxo=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/Users/lindsayj/Documents/dev/simplecountdown/src/hooks/useTimer.ts"],"names":["useRef","useState","useEffect","useCallback","differenceInSeconds","useTimer","timerRef","intervalRef","day","setDay","hour","setHour","minute","setMinute","second","setSecond","updateTimeValues","total","d","Math","floor","h","m","s","calculateEndTime","date","Date","baseDate","current","run","decreaseNum","setInterval","clearInterval"],"mappings":";;AAAA,SACEA,MADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,OALP;AAOA,SAKEC,mBALF,QAMO,UANP;;AAQA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGN,MAAM,CAAC,CAAD,CAAvB;AACA,QAAMO,WAAW,GAAGP,MAAM,EAA1B;AAEA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMe,gBAAgB,GAAGb,WAAW,CAAEc,KAAD,IAAmB;AACtD,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,IAAI,OAAK,EAAT,CAAhB,CAAR;AACA,QAAII,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAWH,KAAK,IAAI,OAAK,EAAT,CAAL,GAAoB,IAA/B,CAAR;AACA,QAAIK,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,IAAR,GAAe,EAA1B,CAAR;AACA,QAAIM,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,CAAR;AAEAR,IAAAA,MAAM,CAACS,CAAD,CAAN;AACAP,IAAAA,OAAO,CAACU,CAAD,CAAP;AACAR,IAAAA,SAAS,CAACS,CAAD,CAAT;AACAP,IAAAA,SAAS,CAACQ,CAAD,CAAT;AACD,GAVmC,EAUjC,EAViC,CAApC;AAYA,QAAMC,gBAAgB,GAAGrB,WAAW,CAAC,MAAM;AACzC,UAAMsB,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAIC,QAAQ,GAAG,IAAID,IAAJ,CAAS,yBAAT,CAAf;AACApB,IAAAA,QAAQ,CAACsB,OAAT,GAAmBxB,mBAAmB,CAACqB,IAAD,EAAOE,QAAP,CAAtC;AACD,GAJmC,EAIjC,EAJiC,CAApC;AAMA,QAAME,GAAG,GAAG1B,WAAW,CAAC,MAAM;AAC5B2B,IAAAA,WAAW;AACXvB,IAAAA,WAAW,CAACqB,OAAZ,GAAsBG,WAAW,CAACD,WAAD,EAAc,IAAd,CAAjC,CAF4B,CAG5B;AACD,GAJsB,EAIpB,EAJoB,CAAvB;AAMA,QAAMA,WAAW,GAAG3B,WAAW,CAAC,MAAM;AACpC,QAAIG,QAAQ,CAACsB,OAAT,IAAoB,CAAxB,EAA2B;AACzBZ,MAAAA,gBAAgB,CAACV,QAAQ,CAACsB,OAAV,CAAhB;AACAtB,MAAAA,QAAQ,CAACsB,OAAT,GAAmBtB,QAAQ,CAACsB,OAAT,GAAmB,CAAtC;AACD,KAHD,MAGO;AACLI,MAAAA,aAAa,CAACzB,WAAW,CAACqB,OAAb,CAAb;AACD,KANmC,CAOpC;;AACD,GAR8B,EAQ5B,EAR4B,CAA/B;AAUA1B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,gBAAgB;AAChBK,IAAAA,GAAG;AACH,WAAO,MAAMG,aAAa,CAACzB,WAAW,CAACqB,OAAb,CAA1B,CAHc,CAId;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO;AACLpB,IAAAA,GADK;AAELE,IAAAA,IAFK;AAGLE,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CAxDD;;GAAMT,Q;;AA0DN,eAAeA,QAAf","sourcesContent":["import {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\n\nimport {\n  setDate,\n  setHours,\n  setMinutes,\n  setSeconds,\n  differenceInSeconds,\n} from 'date-fns';\n\nconst useTimer = () => {\n  const timerRef = useRef(0);\n  const intervalRef = useRef<any>();\n\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n\n  const updateTimeValues = useCallback((total: number) => {\n    var d = Math.floor(total / (3600*24));\n    var h = Math.floor(total % (3600*24) / 3600);\n    var m = Math.floor(total % 3600 / 60);\n    var s = Math.floor(total % 60);\n\n    setDay(d);\n    setHour(h);\n    setMinute(m);\n    setSecond(s);\n  }, []);\n\n  const calculateEndTime = useCallback(() => {\n    const date = new Date();\n    let baseDate = new Date('April 25, 2022 00:00:00');\n    timerRef.current = differenceInSeconds(date, baseDate);\n  }, []);\n\n  const run = useCallback(() => {\n    decreaseNum();\n    intervalRef.current = setInterval(decreaseNum, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const decreaseNum = useCallback(() => {\n    if (timerRef.current >= 0) {\n      updateTimeValues(timerRef.current);\n      timerRef.current = timerRef.current - 1;\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    calculateEndTime();\n    run();\n    return () => clearInterval(intervalRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    day,\n    hour,\n    minute,\n    second,\n  };\n};\n\nexport default useTimer;\n"]},"metadata":{},"sourceType":"module"}